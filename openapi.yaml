openapi: 3.0.0
info:
  title: Smart-House
  version: 1.0.0

paths:
  /Clientss:
    get:
      tags:
        - clients
      summary: Retorna uma lista de Clientss
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clients'
    post:
      tags:
        - clients
      summary: Cria um novo Clients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clients'
      responses:
        '201':
          description: Created

  /Clientss/{ClientsId}:
    get:
      tags:
        - clients
      summary: Retorna um Clients específico
      parameters:
        - name: ClientsId
          in: path
          description: ID do Clients
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients'
    put:
      tags:
        - clients
      summary: Atualiza um Clients específico
      parameters:
        - name: ClientsId
          in: path
          description: ID do Clients
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: Objeto de Clients para ser atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Clients'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - clients
      summary: Deleta um Clients específico
      parameters:
        - name: ClientsId
          in: path
          description: ID do Clients
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /immobiles:
    get:
      tags:
        - immobiles
      summary: Retorna uma lista de imóveis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Immobile'
    post:
      tags:
        - immobiles
      summary: Cria um novo imóvel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Immobile'
      responses:
        '201':
          description: Created

  /immobiles/{ImmobileId}:
    get:
      tags:
        - immobiles
      summary: Retorna um imóvel específico
      parameters:
        - name: ImmobileId
          in: path
          description: ID do imóvel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Immobile'
    put:
      tags:
        - immobiles
      summary: Atualiza um imóvel específico
      parameters:
        - name: ImmobileId
          in: path
          description: ID do imóvel
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: Objeto de imóvel para ser atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Immobile'
      responses:
        '200':
          description: OK
  /rooms_of_houses:
    get:
      tags:
        - rooms_of_houses
      summary: Retorna uma lista de cômodos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomsOfHouses'
    post:
      tags:
        - rooms_of_houses
      summary: Cria um novo cômodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomsOfHouses'
      responses:
        '201':
          description: Created

  /rooms_of_houses/{RoomsOfHousesId}:
    get:
      tags:
        - rooms_of_houses
      summary: Retorna um cômodo específico
      parameters:
        - name: RoomsOfHousesId
          in: path
          description: ID do cômodo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsOfHouses'
    put:
      tags:
        - rooms_of_houses
      summary: Atualiza um cômodo específico
      parameters:
        - name: RoomsOfHousesId
          in: path
          description: ID do cômodo
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: Objeto de cômodo para ser atualizado
          required: true
          schema:
            $ref: '#/components/schemas/RoomsOfHouses'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - rooms_of_houses
      summary: Deleta um cômodo específico
      parameters:
        - name: RoomsOfHousesId
          in: path
          description: ID do cômodo
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /Sensorss:
    get:
      tags:
        - Sensorss
      summary: Retorna uma lista de Sensorss
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensors'
    post:
      tags:
        - Sensorss
      summary: Cria um novo Sensors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensors'
      responses:
        '201':
          description: Created

  /Sensorss/{SensorsId}:
    get:
      tags:
        - Sensorss
      summary: Retorna um Sensors específico
      parameters:
        - name: SensorsId
          in: path
          description: ID do Sensors
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensors'
    put:
      tags:
        - Sensorss
      summary: Atualiza um Sensors específico
      parameters:
        - name: SensorsId
          in: path
          description: ID do Sensors
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: Objeto de Sensors para ser atualizado
          required: true
          schema:
            $ref: '#/components/schemas/Sensors'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Sensorss
      summary: Deleta um Sensors específico
      parameters:
        - name: SensorsId
          in: path
          description: ID do Sensors
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

components:
  schemas:
    Clients:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string

    Immobile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tipo:
          type: string

    RoomsOfHouses:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        area:
          type: number

    Sensors:
      type: object
      properties:
        id:
          type: string
        tipo:
          type: string
        valor:
          type: number
        status:
          type: string
